{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/Users/sukarno.zhanggmail.com/Desktop/PMOB7/screens/CreateScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport axios from \"axios\";\nimport { API, API_CREATE } from \"../constants/API\";\nimport { commonStyles, lightStyles, darkStyles } from \"../styles/commonStyles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nexport default function CreateScreen(_ref) {\n  var navigation = _ref.navigation;\n  var isDark = useSelector(function (state) {\n    return state.accountPrefs.isDark;\n  });\n\n  var styles = _objectSpread(_objectSpread({}, commonStyles), isDark ? darkStyles : lightStyles);\n\n  var token = useSelector(function (state) {\n    return state.auth;\n  });\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      content = _useState4[0],\n      setContent = _useState4[1];\n\n  function savePost() {\n    var post, response;\n    return _regeneratorRuntime.async(function savePost$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            post = {\n              \"title\": title,\n              \"content\": content\n            };\n            _context.prev = 1;\n            console.log(token);\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(axios.post(API + API_CREATE, post, {\n              headers: {\n                Authorization: \"JWT \" + token\n              }\n            }));\n\n          case 5:\n            response = _context.sent;\n            console.log(response.data);\n            navigation.navigate(\"Index\", {\n              post: post\n            });\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](1);\n            console.log(_context.t0);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 10]], Promise);\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      margin: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: [additionalStyles.label, styles.text],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"Enter Task:\"), React.createElement(TextInput, {\n    style: additionalStyles.input,\n    value: title,\n    onChangeText: function onChangeText(text) {\n      return setTitle(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: [additionalStyles.label, styles.text],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"Priority:\"), React.createElement(TextInput, {\n    style: additionalStyles.input,\n    value: content,\n    onChangeText: function onChangeText(text) {\n      return setContent(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: [styles.button, {\n      marginTop: 20\n    }],\n    onPress: savePost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"Save\"))));\n}\nvar additionalStyles = StyleSheet.create({\n  input: {\n    fontSize: 24,\n    borderWidth: 1,\n    borderColor: \"black\",\n    marginBottom: 15\n  },\n  label: {\n    fontSize: 28,\n    marginBottom: 10,\n    marginLeft: 5\n  }\n});","map":{"version":3,"sources":["/Users/sukarno.zhanggmail.com/Desktop/PMOB7/screens/CreateScreen.js"],"names":["React","useState","axios","API","API_CREATE","commonStyles","lightStyles","darkStyles","useDispatch","useSelector","CreateScreen","navigation","isDark","state","accountPrefs","styles","token","auth","title","setTitle","content","setContent","savePost","post","console","log","headers","Authorization","response","data","navigate","container","margin","additionalStyles","label","text","input","button","marginTop","buttonText","StyleSheet","create","fontSize","borderWidth","borderColor","marginBottom","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { View, Text, StyleSheet, TextInput, TouchableOpacity } from \"react-native\";\nimport axios from \"axios\";\nimport { API, API_CREATE } from \"../constants/API\";\n//import AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nimport { commonStyles,lightStyles, darkStyles } from '../styles/commonStyles';\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport default function CreateScreen({ navigation }) {\n\n  //const styles = { ...lightStyles, ...commonStyles }\n  const isDark = useSelector((state) => state.accountPrefs.isDark);\n\n  const styles = { ...commonStyles, ...isDark ? darkStyles : lightStyles };\n  const token = useSelector((state) => state.auth);\n\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n\n\n    async function savePost() {\n      const post = {\n        \"title\": title,\n        \"content\": content, \n      }\n      //const token = await AsyncStorage.getItem(\"token\");\n      try {\n        console.log(token);\n        const response = await axios.post(API + API_CREATE, post, {\n          headers: { Authorization: `JWT ${token}` }\n        });\n        console.log(response.data)\n        navigation.navigate(\"Index\", { post: post })\n      } catch (error) {\n        console.log(error)\n      }\n    }\n\n\n  \n\n\n  return (\n    <View style={styles.container}>\n      \n      <View style={{ margin: 20 }}>\n        <Text style={[additionalStyles.label, styles.text]}>Enter Task:</Text>\n        <TextInput\n          style={additionalStyles.input}\n          value={title}\n          onChangeText={text => setTitle(text)}\n        />\n        <Text style={[additionalStyles.label, styles.text]}>Priority:</Text>\n        <TextInput\n          style={additionalStyles.input}\n          value={content}\n          onChangeText={text => setContent(text)}\n        />\n      <TouchableOpacity style={[styles.button, {marginTop: 20}]} onPress={savePost}>\n        <Text style={styles.buttonText}>\n          Save\n        </Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  )\n}\n\nconst additionalStyles = StyleSheet.create({\n  input: {\n    fontSize: 24,\n    borderWidth: 1,\n    borderColor: \"black\",\n    marginBottom: 15,\n  },\n  label: {\n    fontSize: 28,\n    marginBottom: 10,\n    marginLeft: 5\n  }\n});"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/sukarno.zhanggmail.com/Desktop/PMOB7/screens/DetailsScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport axios from \"axios\";\nimport { API, API_POSTS } from \"../constants/API\";\nimport { commonStyles, lightStyles, darkStyles } from \"../styles/commonStyles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nexport default function ShowScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState({\n    title: \"\",\n    content: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      post = _useState2[0],\n      setPost = _useState2[1];\n\n  var isDark = useSelector(function (state) {\n    return state.accountPrefs.isDark;\n  });\n  var token = useSelector(function (state) {\n    return state.auth.token;\n  });\n  var profilePicture = useSelector(function (state) {\n    return state.accountPrefs.profilePicture;\n  });\n  var dispatch = useDispatch();\n\n  var styles = _objectSpread(_objectSpread({}, commonStyles), isDark ? darkStyles : lightStyles);\n\n  var picSize = new Animated.Value(0);\n  var sizeInterpolation = {\n    inputRange: [0, 0.5, 1],\n    outputRange: [200, 300, 200]\n  };\n\n  function changePicSize() {\n    Animated.loop(Animated.timing(picSize, {\n      toValue: 1,\n      duration: 2500,\n      useNativeDriver: false\n    })).start();\n  }\n\n  useEffect(function () {\n    navigation.setOptions({\n      headerRight: function headerRight() {\n        return React.createElement(TouchableOpacity, {\n          onPress: editPost,\n          style: {\n            marginRight: 10\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 9\n          }\n        }, React.createElement(FontAwesome, {\n          name: \"pencil-square-o\",\n          size: 30,\n          color: styles.headerTint,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }\n        }));\n      }\n    });\n  });\n  useEffect(function () {\n    getPost();\n  }, []);\n\n  function getPost() {\n    var id, response;\n    return _regeneratorRuntime.async(function getPost$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            id = route.params.id;\n            console.log(id);\n            _context.prev = 2;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(axios.get(API + API_POSTS + \"/\" + id, {\n              headers: {\n                Authorization: \"JWT \" + token\n              }\n            }));\n\n          case 5:\n            response = _context.sent;\n            console.log(response.data);\n            setPost(response.data);\n            _context.next = 14;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](2);\n            console.log(_context.t0.response.data);\n\n            if (_context.t0.response.data.error = \"Invalid token\") {\n              navigation.navigate(\"SignInSignUp\");\n            }\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 10]], Promise);\n  }\n\n  function editPost() {\n    navigation.navigate(\"Edit\", {\n      post: post\n    });\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: [styles.title, styles.text, {\n      margin: 40\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, post.title), React.createElement(Text, {\n    style: [styles.content, styles.text, {\n      margin: 20\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, \"Priority :\", post.content), React.createElement(View, {\n    style: {\n      height: profilePicture == null ? 0 : 320,\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, profilePicture == null ? React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }) : React.createElement(TouchableWithoutFeedback, {\n    onPress: changePicSize,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, React.createElement(Animated.Image, {\n    style: {\n      width: picSize.interpolate(sizeInterpolation),\n      height: picSize.interpolate(sizeInterpolation),\n      borderRadius: 200\n    },\n    source: {\n      uri: profilePicture == null ? void 0 : profilePicture.uri\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }))), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate(\"Camera\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      marginTop: 10,\n      fontSize: 20,\n      color: \"#0000EE\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, \" \", \"Take A Picture of \", post.title, \" \")));\n}","map":{"version":3,"sources":["/Users/sukarno.zhanggmail.com/Desktop/PMOB7/screens/DetailsScreen.js"],"names":["React","useState","useEffect","FontAwesome","axios","API","API_POSTS","commonStyles","lightStyles","darkStyles","useDispatch","useSelector","ShowScreen","navigation","route","title","content","post","setPost","isDark","state","accountPrefs","token","auth","profilePicture","dispatch","styles","picSize","Animated","Value","sizeInterpolation","inputRange","outputRange","changePicSize","loop","timing","toValue","duration","useNativeDriver","start","setOptions","headerRight","editPost","marginRight","headerTint","getPost","id","params","console","log","get","headers","Authorization","response","data","error","navigate","container","text","margin","height","justifyContent","width","interpolate","borderRadius","uri","marginTop","fontSize","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport {\n  ActivityIndicator,\n  TouchableOpacity,\n  Text,\n  View,\n  Switch,\n  Animated,\n  TouchableWithoutFeedback,\n} from \"react-native\";\nimport { FontAwesome } from \"@expo/vector-icons\";\n//import { commonStyles, lightStyles } from \"../styles/commonStyles\";\n//import AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport axios from \"axios\";\nimport { API, API_POSTS } from \"../constants/API\";\n\nimport { commonStyles, lightStyles, darkStyles } from \"../styles/commonStyles\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport default function ShowScreen({ navigation, route }) {\n  const [post, setPost] = useState({ title: \"\", content: \"\" });\n  //const styles = {...lightStyles, ...commonStyles};  const isDark = useSelector((state) => state.accountPrefs.isDark);\n  const isDark = useSelector((state) => state.accountPrefs.isDark);\n\n  const token = useSelector((state) => state.auth.token);\n\n  const profilePicture = useSelector(\n    (state) => state.accountPrefs.profilePicture\n  );\n  const dispatch = useDispatch();\n\n  const styles = { ...commonStyles, ...(isDark ? darkStyles : lightStyles) };\n\n  const picSize = new Animated.Value(0);\n  const sizeInterpolation = {\n    inputRange: [0, 0.5, 1],\n    outputRange: [200, 300, 200],\n  };\n\n  function changePicSize() {\n    Animated.loop(\n      Animated.timing(picSize, {\n        toValue: 1,\n        duration: 2500,\n        useNativeDriver: false,\n      })\n    ).start();\n  }\n\n  useEffect(() => {\n    navigation.setOptions({\n      headerRight: () => (\n        <TouchableOpacity onPress={editPost} style={{ marginRight: 10 }}>\n          <FontAwesome\n            name=\"pencil-square-o\"\n            size={30}\n            color={styles.headerTint}\n          />\n        </TouchableOpacity>\n      ),\n    });\n  });\n\n  useEffect(() => {\n    getPost();\n  }, []);\n\n  async function getPost() {\n    //const token = await AsyncStorage.getItem(\"token\");\n    const id = route.params.id;\n    console.log(id);\n    try {\n      const response = await axios.get(API + API_POSTS + \"/\" + id, {\n        headers: { Authorization: `JWT ${token}` },\n      });\n      console.log(response.data);\n      setPost(response.data);\n    } catch (error) {\n      console.log(error.response.data);\n      if ((error.response.data.error = \"Invalid token\")) {\n        navigation.navigate(\"SignInSignUp\");\n      }\n    }\n  }\n\n  function editPost() {\n    navigation.navigate(\"Edit\", { post: post });\n  }\n\n  return (\n    <View style={styles.container}>\n      <Text style={[styles.title, styles.text, { margin: 40 }]}>\n        {post.title}\n      </Text>\n      <Text style={[styles.content, styles.text, { margin: 20 }]}>\n        Priority :\n        {post.content}\n      </Text>\n      <View\n        style={{\n          height: profilePicture == null ? 0 : 320,\n          justifyContent: \"center\",\n        }}\n      >\n        {profilePicture == null ? (\n          <View />\n        ) : (\n          <TouchableWithoutFeedback onPress={changePicSize}>\n            <Animated.Image\n              style={{\n                width: picSize.interpolate(sizeInterpolation),\n                height: picSize.interpolate(sizeInterpolation),\n                borderRadius: 200,\n              }}\n              source={{ uri: profilePicture?.uri }}\n            />\n          </TouchableWithoutFeedback>\n        )}\n      </View>\n      \n      <TouchableOpacity onPress={() => navigation.navigate(\"Camera\")}>\n        <Text style={{ marginTop: 10, fontSize: 20, color: \"#0000EE\" }}>\n          {\" \"}\n          Take A Picture of {post.title}{\" \"}\n        </Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
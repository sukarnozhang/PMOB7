{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/sukarno.zhanggmail.com/Desktop/PMOB6/screens/IndexScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport axios from \"axios\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { API, API_POSTS } from \"../constants/API\";\nimport { lightStyles } from \"../styles/commonStyles\";\nexport default function IndexScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      posts = _useState2[0],\n      setPosts = _useState2[1];\n\n  var styles = lightStyles;\n  useEffect(function () {\n    navigation.setOptions({\n      headerRight: function headerRight() {\n        return React.createElement(TouchableOpacity, {\n          onPress: addPost,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 9\n          }\n        }, React.createElement(FontAwesome, {\n          name: \"plus\",\n          size: 24,\n          style: {\n            color: styles.headerTint,\n            marginRight: 15\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 11\n          }\n        }));\n      }\n    });\n  });\n  useEffect(function () {\n    getPosts();\n  }, []);\n\n  function getPosts() {\n    var token, response;\n    return _regeneratorRuntime.async(function getPosts$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"token\"));\n\n          case 2:\n            token = _context.sent;\n            _context.prev = 3;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(axios.get(API + API_POSTS, {\n              headers: {\n                Authorization: \"JWT \" + token\n              }\n            }));\n\n          case 6:\n            response = _context.sent;\n            console.log(response.data);\n            setPosts(response.data);\n            return _context.abrupt(\"return\", \"completed\");\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](3);\n            console.log(_context.t0.response.data);\n\n            if (_context.t0.response.data.error = \"Invalid token\") {\n              navigation.navigate(\"SignInSignUp\");\n            }\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[3, 12]], Promise);\n  }\n\n  function addPost() {}\n\n  function deletePost() {}\n\n  function renderItem(_ref2) {\n    var item = _ref2.item;\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate(\"Details\", {\n          post: item\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: {\n        padding: 10,\n        paddingTop: 20,\n        paddingBottom: 20,\n        borderBottomColor: \"#ccc\",\n        borderBottomWidth: 1,\n        flexDirection: \"row\",\n        justifyContent: \"space-between\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: styles.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, item.title), React.createElement(TouchableOpacity, {\n      onPress: deletePost,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, React.createElement(FontAwesome, {\n      name: \"trash\",\n      size: 20,\n      color: \"#a80000\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    data: posts,\n    renderItem: renderItem,\n    style: {\n      width: \"100%\"\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.id.toString();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/sukarno.zhanggmail.com/Desktop/PMOB6/screens/IndexScreen.js"],"names":["React","useEffect","useState","FontAwesome","axios","AsyncStorage","API","API_POSTS","lightStyles","IndexScreen","navigation","route","posts","setPosts","styles","setOptions","headerRight","addPost","color","headerTint","marginRight","getPosts","getItem","token","get","headers","Authorization","response","console","log","data","error","navigate","deletePost","renderItem","item","post","padding","paddingTop","paddingBottom","borderBottomColor","borderBottomWidth","flexDirection","justifyContent","text","title","container","width","id","toString"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Text, View, TouchableOpacity, FlatList, RefreshControl} from \"react-native\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport axios from \"axios\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { API, API_POSTS } from \"../constants/API\";\nimport { lightStyles } from \"../styles/commonStyles\";\n\nexport default function IndexScreen({ navigation, route }) {\n\n  const [posts, setPosts] = useState([]);\n  const styles = lightStyles;\n\n  // This is to set up the top right button\n  useEffect(() => {\n    navigation.setOptions({\n      headerRight: () => (\n        <TouchableOpacity onPress={addPost}>\n          <FontAwesome name=\"plus\" size={24} style={{ color: styles.headerTint, marginRight: 15 }} />\n        </TouchableOpacity>\n      ),\n    });\n  });\n\n  useEffect(() => {\n    getPosts();\n  }, []);\n\n  async function getPosts() {\n    const token = await AsyncStorage.getItem(\"token\");\n    try {\n      const response = await axios.get(API + API_POSTS, {\n        headers: { Authorization: `JWT ${token}` },\n      })\n      console.log(response.data);\n      setPosts(response.data);\n      return \"completed\"\n    } catch (error) {\n      console.log(error.response.data);\n      if (error.response.data.error = \"Invalid token\") {\n        navigation.navigate(\"SignInSignUp\");\n      }\n    }\n  }\n\n  function addPost() {\n    \n  }\n\n  function deletePost() {\n    \n  }\n\n  // The function to render each row in our FlatList\n  function renderItem({ item }) {\n    return (\n      <TouchableOpacity onPress={() => navigation.navigate(\"Details\", {post: item})}>\n        <View\n          style={{\n            padding: 10,\n            paddingTop: 20,\n            paddingBottom: 20,\n            borderBottomColor: \"#ccc\",\n            borderBottomWidth: 1,\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n          }}>\n          <Text style={styles.text}>{item.title}</Text>\n          <TouchableOpacity onPress={deletePost}>\n            <FontAwesome name=\"trash\" size={20} color=\"#a80000\" />\n          </TouchableOpacity>\n        </View>\n      </TouchableOpacity>\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      <FlatList\n        data={posts}\n        renderItem={renderItem}\n        style={{ width: \"100%\" }}\n        keyExtractor={(item) => item.id.toString()}\n      />\n    </View>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}
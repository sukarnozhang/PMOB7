{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/sukarno.zhanggmail.com/Desktop/PMOB6/screens/AccountScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { commonStyles, lightStyles } from \"../styles/commonStyles\";\nimport axios from \"axios\";\nimport { API, API_WHOAMI } from \"../constants/API\";\nimport { useSelector } from \"react-redux\";\nexport default function AccountScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var styles = _objectSpread(_objectSpread({}, commonStyles), lightStyles);\n\n  var token = useSelector(function (state) {\n    return state.auth.token;\n  });\n\n  function getUsername() {\n    var response;\n    return _regeneratorRuntime.async(function getUsername$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"---- Getting user name ----\");\n            console.log(\"Token is \" + token);\n            _context.prev = 2;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(axios.get(API + API_WHOAMI, {\n              headers: {\n                Authorization: \"JWT \" + token\n              }\n            }));\n\n          case 5:\n            response = _context.sent;\n            console.log(\"Got user name!\");\n            setUsername(response.data.username);\n            _context.next = 14;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](2);\n            console.log(\"Error getting user name\");\n\n            if (_context.t0.response) {\n              console.log(_context.t0.response.data);\n\n              if (_context.t0.response.data.status_code === 401) {\n                signOut();\n                navigation.navigate(\"SignInSignUp\");\n              }\n            } else {\n              console.log(_context.t0);\n            }\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 10]], Promise);\n  }\n\n  function signOut() {\n    AsyncStorage.removeItem(\"token\");\n    navigation.navigate(\"SignInSignUp\");\n  }\n\n  useEffect(function () {\n    console.log(\"Setting up nav listener\");\n    var removeListener = navigation.addListener(\"focus\", function () {\n      console.log(\"Running nav listener\");\n      setUsername(React.createElement(ActivityIndicator, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 19\n        }\n      }));\n      getUsername();\n    });\n    getUsername();\n    return removeListener;\n  }, []);\n  return React.createElement(View, {\n    style: [styles.container, {\n      alignItems: \"center\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: {\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \"Account Screen\"), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, username));\n}","map":{"version":3,"sources":["/Users/sukarno.zhanggmail.com/Desktop/PMOB6/screens/AccountScreen.js"],"names":["React","useState","useEffect","commonStyles","lightStyles","axios","API","API_WHOAMI","useSelector","AccountScreen","navigation","username","setUsername","styles","token","state","auth","getUsername","console","log","get","headers","Authorization","response","data","status_code","signOut","navigate","AsyncStorage","removeItem","removeListener","addListener","container","alignItems","marginTop"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;;;AAEA,SAASC,YAAT,EAAuBC,WAAvB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,UAAd;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,eAAe,SAASC,aAAT,OAAuC;AAAA;;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAEpD,kBAAgCT,QAAQ,CAAC,IAAD,CAAxC;AAAA;AAAA,MAAOU,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,MAAMC,MAAM,mCAAQV,YAAR,GAAyBC,WAAzB,CAAZ;;AACA,MAAMU,KAAK,GAAGN,WAAW,CAAC,UAACO,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAN,CAAWF,KAAtB;AAAA,GAAD,CAAzB;;AAEA,WAAeG,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACEC,YAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AAEAD,YAAAA,OAAO,CAACC,GAAR,eAAwBL,KAAxB;AAHF;AAAA;AAAA,6CAK2BT,KAAK,CAACe,GAAN,CAAUd,GAAG,GAAGC,UAAhB,EAA4B;AACjDc,cAAAA,OAAO,EAAE;AAAEC,gBAAAA,aAAa,WAASR;AAAxB;AADwC,aAA5B,CAL3B;;AAAA;AAKUS,YAAAA,QALV;AAQIL,YAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAP,YAAAA,WAAW,CAACW,QAAQ,CAACC,IAAT,CAAcb,QAAf,CAAX;AATJ;AAAA;;AAAA;AAAA;AAAA;AAWIO,YAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;;AACA,gBAAI,YAAMI,QAAV,EAAoB;AAClBL,cAAAA,OAAO,CAACC,GAAR,CAAY,YAAMI,QAAN,CAAeC,IAA3B;;AACA,kBAAI,YAAMD,QAAN,CAAeC,IAAf,CAAoBC,WAApB,KAAoC,GAAxC,EAA6C;AAC3CC,gBAAAA,OAAO;AACPhB,gBAAAA,UAAU,CAACiB,QAAX,CAAoB,cAApB;AACD;AACF,aAND,MAMO;AACLT,cAAAA,OAAO,CAACC,GAAR;AACD;;AApBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAyBA,WAASO,OAAT,GAAmB;AACjBE,IAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACAnB,IAAAA,UAAU,CAACiB,QAAX,CAAoB,cAApB;AACD;;AAEDzB,EAAAA,SAAS,CAAC,YAAM;AACdgB,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AAEA,QAAMW,cAAc,GAAGpB,UAAU,CAACqB,WAAX,CAAuB,OAAvB,EAAgC,YAAM;AAC3Db,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAP,MAAAA,WAAW,CAAC,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAD,CAAX;AACAK,MAAAA,WAAW;AACZ,KAJsB,CAAvB;AAKAA,IAAAA,WAAW;AACX,WAAOa,cAAP;AACD,GAVQ,EAUN,EAVM,CAAT;AAYA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACjB,MAAM,CAACmB,SAAR,EAAmB;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAAnB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,SAAS,EAAE;AAAZ,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGvB,QADH,CAJF,CADF;AAUD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { ActivityIndicator, TouchableOpacity, Text, View, Switch, Animated, TouchableWithoutFeedback } from \"react-native\";\nimport { commonStyles, lightStyles } from \"../styles/commonStyles\";\n//import AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport axios from \"axios\";\nimport { API, API_WHOAMI } from \"../constants/API\";\nimport { useSelector } from \"react-redux\";\n\nexport default function AccountScreen({ navigation }) {\n\n  const [username, setUsername] = useState(null);\n\n  const styles = { ...commonStyles, ...lightStyles };\n  const token = useSelector((state) => state.auth.token)\n\n  async function getUsername() {\n    console.log(\"---- Getting user name ----\");\n    //const token = await AsyncStorage.getItem(\"token\");\n    console.log(`Token is ${token}`);\n    try {\n      const response = await axios.get(API + API_WHOAMI, {\n        headers: { Authorization: `JWT ${token}` },\n      });\n      console.log(\"Got user name!\");\n      setUsername(response.data.username);\n    } catch (error) {\n      console.log(\"Error getting user name\");\n      if (error.response) {\n        console.log(error.response.data);\n        if (error.response.data.status_code === 401) {\n          signOut();\n          navigation.navigate(\"SignInSignUp\")\n        }\n      } else {\n        console.log(error);\n      }\n      // We should probably go back to the login screen???\n    }\n  }\n\n  function signOut() {\n    AsyncStorage.removeItem(\"token\");\n    navigation.navigate(\"SignInSignUp\");\n  }\n\n  useEffect(() => {\n    console.log(\"Setting up nav listener\");\n    // Check for when we come back to this screen\n    const removeListener = navigation.addListener(\"focus\", () => {\n      console.log(\"Running nav listener\");\n      setUsername(<ActivityIndicator />);\n      getUsername();\n    });\n    getUsername();\n    return removeListener;\n  }, []);\n\n  return (\n    <View style={[styles.container, { alignItems: \"center\" }]}>\n      <Text style={{marginTop: 20}}>\n        Account Screen\n      </Text>\n      <Text>\n        {username}\n      </Text>\n    </View>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
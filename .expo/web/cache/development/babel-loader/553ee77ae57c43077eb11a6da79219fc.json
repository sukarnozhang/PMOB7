{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/Users/sukarno.zhanggmail.com/Desktop/PMOB7/screens/EditScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { API, API_POSTS } from \"../constants/API\";\nimport axios from \"axios\";\nimport { commonStyles, lightStyles, darkStyles } from \"../styles/commonStyles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nexport default function EditScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var isDark = useSelector(function (state) {\n    return state.accountPrefs.isDark;\n  });\n\n  var styles = _objectSpread(_objectSpread({}, commonStyles), isDark ? darkStyles : lightStyles);\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      content = _useState4[0],\n      setContent = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      pic = _useState6[0],\n      setPic = _useState6[1];\n\n  var token = useSelector(function (state) {\n    return state.auth.token;\n  });\n  useEffect(function () {\n    var post = route.params.post;\n    setTitle(post.title);\n    setContent(post.content);\n    setPic(post.pic);\n  }, []);\n\n  function editPost() {\n    var post, id, response;\n    return _regeneratorRuntime.async(function editPost$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            post = {\n              \"title\": title,\n              \"content\": content,\n              \"pic\": pic\n            };\n            id = route.params.post.id;\n            _context.prev = 2;\n            console.log(token);\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(axios.put(API + API_POSTS + \"/\" + id, post, {\n              headers: {\n                Authorization: \"JWT \" + token\n              }\n            }));\n\n          case 6:\n            response = _context.sent;\n            console.log(response.data);\n            navigation.navigate(\"Index\");\n            _context.next = 14;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](2);\n            console.log(_context.t0);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 11]], Promise);\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: [styles.text, styles.title, {\n      marginTop: 20\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: {\n      margin: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: [additionalStyles.label, styles.text],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Enter Task:\"), React.createElement(TextInput, {\n    style: additionalStyles.input,\n    value: title,\n    onChangeText: function onChangeText(text) {\n      return setTitle(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: [additionalStyles.label, styles.text],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"Enter Priority:\"), React.createElement(TextInput, {\n    style: additionalStyles.input,\n    value: content,\n    onChangeText: function onChangeText(text) {\n      return setContent(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate(\"Camera\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      marginTop: 10,\n      fontSize: 20,\n      color: \"#0000EE\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \" Take A Picture  \")), React.createElement(TouchableOpacity, {\n    style: [styles.button, {\n      marginTop: 20\n    }],\n    onPress: editPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"Save\"))));\n}\nvar styles = StyleSheet.create({});\nvar additionalStyles = StyleSheet.create({\n  input: {\n    fontSize: 24,\n    borderWidth: 1,\n    borderColor: \"black\",\n    marginBottom: 15\n  },\n  label: {\n    fontSize: 28,\n    marginBottom: 10,\n    marginLeft: 5\n  }\n});","map":{"version":3,"sources":["/Users/sukarno.zhanggmail.com/Desktop/PMOB7/screens/EditScreen.js"],"names":["React","useState","useEffect","API","API_POSTS","axios","commonStyles","lightStyles","darkStyles","useDispatch","useSelector","EditScreen","navigation","route","isDark","state","accountPrefs","styles","title","setTitle","content","setContent","pic","setPic","token","auth","post","params","editPost","id","console","log","put","headers","Authorization","response","data","navigate","container","text","marginTop","margin","additionalStyles","label","input","fontSize","color","button","buttonText","StyleSheet","create","borderWidth","borderColor","marginBottom","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { StyleSheet, Text, View, TextInput, TouchableOpacity } from \"react-native\";\n\n//import { commonStyles, lightStyles } from \"../styles/commonStyles\";\n\n//import AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { API, API_POSTS } from \"../constants/API\";\nimport axios from \"axios\";\n\nimport { commonStyles,lightStyles, darkStyles } from '../styles/commonStyles';\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport default function EditScreen({ navigation, route }) {\n\n  //const styles = { ...lightStyles, ...commonStyles }\n  const isDark = useSelector((state) => state.accountPrefs.isDark);\n  const styles = { ...commonStyles, ...isDark ? darkStyles : lightStyles };\n\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [pic, setPic] = useState(\"\");\n  const token = useSelector((state) => state.auth.token);\n\n  useEffect(() => {\n    const post = route.params.post\n    setTitle(post.title);\n    setContent(post.content);\n    setPic(post.pic)\n  }, [])\n\n  async function editPost() {\n    const post = {\n      \"title\": title,\n      \"content\": content,\n      \"pic\": pic,\n    }\n    //const token = await AsyncStorage.getItem(\"token\");\n    const id = route.params.post.id\n    try {\n      console.log(token);\n      const response = await axios.put(API + API_POSTS + \"/\" + id, post, {\n        headers: { Authorization: `JWT ${token}` },\n      })\n      console.log(response.data)\n      navigation.navigate(\"Index\")\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n\n  return (\n    <View style={styles.container}>\n      <Text style={[styles.text, styles.title, {marginTop: 20}]}></Text>\n      <View style={{ margin: 20 }}>\n        <Text style={[additionalStyles.label, styles.text]}>Enter Task:</Text>\n        <TextInput\n          style={additionalStyles.input}\n          value={title}\n          onChangeText={text => setTitle(text)}\n        />\n        <Text style={[additionalStyles.label, styles.text]}>Enter Priority:</Text>\n        <TextInput\n          style={additionalStyles.input}\n          value={content}\n          onChangeText={text => setContent(text)}\n        />\n\n      <TouchableOpacity onPress={() => navigation.navigate(\"Camera\")}>\n        <Text style={{ marginTop: 10, fontSize: 20, color: \"#0000EE\" }}> Take A Picture  </Text>\n      </TouchableOpacity>\n\n\n\n\n      <TouchableOpacity style={[styles.button, {marginTop: 20}]} onPress={editPost}>\n        <Text style={styles.buttonText}>\n          Save\n        </Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({});\nconst additionalStyles = StyleSheet.create({\n  input: {\n    fontSize: 24,\n    borderWidth: 1,\n    borderColor: \"black\",\n    marginBottom: 15,\n  },\n  label: {\n    fontSize: 28,\n    marginBottom: 10,\n    marginLeft: 5\n  }\n});"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/sukarno.zhanggmail.com/Desktop/PMOB6/App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport LoggedInTabStack from \"./components/LoggedInTabStack\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport SignInSignUpScreen from \"./screens/SignInSignUpScreen\";\nvar Stack = createStackNavigator();\nexport default function App() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      signedIn = _useState4[0],\n      setSignedIn = _useState4[1];\n\n  function loadToken() {\n    var token;\n    return _regeneratorRuntime.async(function loadToken$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"token\"));\n\n          case 2:\n            token = _context.sent;\n\n            if (token) {\n              setSignedIn(true);\n            }\n\n            setLoading(false);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    loadToken();\n  }, []);\n  return loading ? React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, React.createElement(ActivityIndicator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  })) : React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Navigator, {\n    mode: \"modal\",\n    headerMode: \"none\",\n    initialRouteName: signedIn ? \"LoggedIn\" : \"SignInSignUp\",\n    animationEnabled: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    component: LoggedInTabStack,\n    name: \"LoggedIn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }), React.createElement(Stack.Screen, {\n    component: SignInSignUpScreen,\n    name: \"SignInSignUp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["/Users/sukarno.zhanggmail.com/Desktop/PMOB6/App.js"],"names":["React","useState","useEffect","NavigationContainer","LoggedInTabStack","createStackNavigator","AsyncStorage","SignInSignUpScreen","Stack","App","loading","setLoading","signedIn","setSignedIn","loadToken","getItem","token","styles","container","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,gBAAP;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,OAAOC,kBAAP;AAIA,IAAMC,KAAK,GAAGH,oBAAoB,EAAlC;AAEA,eAAe,SAASI,GAAT,GAAe;AAC5B,kBAA8BR,QAAQ,CAAC,IAAD,CAAtC;AAAA;AAAA,MAAOS,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAAgCV,QAAQ,CAAC,KAAD,CAAxC;AAAA;AAAA,MAAOW,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,WAAeC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACsBR,YAAY,CAACS,OAAb,CAAqB,OAArB,CADtB;;AAAA;AACQC,YAAAA,KADR;;AAEE,gBAAIA,KAAJ,EAAW;AACTH,cAAAA,WAAW,CAAC,IAAD,CAAX;AACD;;AACDF,YAAAA,UAAU,CAAC,KAAD,CAAV;;AALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQAT,EAAAA,SAAS,CAAC,YAAM;AACdY,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAOJ,OAAO,GACZ,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEO,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADY,GAKZ,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,SAAP;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,UAAU,EAAC,MAFf;AAGI,IAAA,gBAAgB,EAAEN,QAAQ,GAAG,UAAH,GAAgB,cAH9C;AAII,IAAA,gBAAgB,EAAE,KAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,SAAS,EAAER,gBAAzB;AAA2C,IAAA,IAAI,EAAC,UAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAME,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,SAAS,EAAEG,kBAAzB;AAA6C,IAAA,IAAI,EAAC,cAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF,CALF;AAgBD;AAED,IAAMU,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { ActivityIndicator, StyleSheet, View } from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport LoggedInTabStack from \"./components/LoggedInTabStack\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport SignInSignUpScreen from \"./screens/SignInSignUpScreen\";\n//import Logged In from \"./components/LoggedInTabStack\";\n//import { ActivityIndicator, Platform, StyleSheet, View } from \"react-native\";\n\nconst Stack = createStackNavigator();\n\nexport default function App() {\n  const [loading, setLoading] = useState(true);\n  const [signedIn, setSignedIn] = useState(false);\n\n  async function loadToken() {\n    const token = await AsyncStorage.getItem(\"token\");\n    if (token) {\n      setSignedIn(true);\n    }\n    setLoading(false);\n  }\n\n  useEffect(() => {\n    loadToken();\n  }, []);\n\n  return loading ? (\n    <View style={styles.container}>\n      <ActivityIndicator />\n    </View>\n  ) : (\n    <NavigationContainer>\n      <Stack.Navigator\n          mode=\"modal\"\n          headerMode=\"none\"\n          initialRouteName={signedIn ? \"LoggedIn\" : \"SignInSignUp\"}\n          animationEnabled={false}>\n          <Stack.Screen component={LoggedInTabStack} name=\"LoggedIn\" />\n        <Stack.Screen component={SignInSignUpScreen} name=\"SignInSignUp\" />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}
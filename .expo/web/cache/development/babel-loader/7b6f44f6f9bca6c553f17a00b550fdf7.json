{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/sukarno.zhanggmail.com/Desktop/PMOB6/screens/IndexScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport axios from \"axios\";\nimport { API, API_POSTS } from \"../constants/API\";\nimport { lightStyles } from \"../styles/commonStyles\";\nimport { useSelector } from \"react-redux\";\nexport default function IndexScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      posts = _useState2[0],\n      setPosts = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      refreshing = _useState4[0],\n      setRefreshing = _useState4[1];\n\n  var styles = lightStyles;\n  var token = useSelector(function (state) {\n    return state.auth.token;\n  });\n  useEffect(function () {\n    navigation.setOptions({\n      headerRight: function headerRight() {\n        return React.createElement(TouchableOpacity, {\n          onPress: addPost,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 9\n          }\n        }, React.createElement(FontAwesome, {\n          name: \"plus\",\n          size: 24,\n          style: {\n            color: styles.headerTint,\n            marginRight: 15\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 11\n          }\n        }));\n      }\n    });\n  });\n  useEffect(function () {\n    getPosts();\n  }, []);\n  useEffect(function () {\n    console.log(\"Setting up listener\");\n    var removeListener = navigation.addListener(\"focus\", function () {\n      console.log(\"Running nav listener\");\n      getPosts();\n    });\n    getPosts();\n    return removeListener;\n  }, []);\n\n  function getPosts() {\n    var response;\n    return _regeneratorRuntime.async(function getPosts$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(axios.get(API + API_POSTS, {\n              headers: {\n                Authorization: \"JWT \" + token\n              }\n            }));\n\n          case 3:\n            response = _context.sent;\n            console.log(response.data);\n            console.log(token);\n            setPosts(response.data);\n            return _context.abrupt(\"return\", \"completed\");\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0.response.data);\n\n            if (_context.t0.response.data.error = \"Invalid token\") {\n              navigation.navigate(\"SignInSignUp\");\n            }\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  }\n\n  function onRefresh() {\n    var response;\n    return _regeneratorRuntime.async(function onRefresh$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setRefreshing(true);\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(getPosts());\n\n          case 3:\n            response = _context2.sent;\n            setRefreshing(false);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function addPost() {\n    navigation.navigate(\"Add\");\n  }\n\n  function deletePost(id) {\n    var response;\n    return _regeneratorRuntime.async(function deletePost$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            console.log(\"Deleting \" + id);\n            _context3.prev = 1;\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(axios.delete(API + API_POSTS + (\"/\" + id), {\n              headers: {\n                Authorization: \"JWT \" + token\n              }\n            }));\n\n          case 4:\n            response = _context3.sent;\n            console.log(response);\n            setPosts(posts.filter(function (item) {\n              return item.id !== id;\n            }));\n            _context3.next = 12;\n            break;\n\n          case 9:\n            _context3.prev = 9;\n            _context3.t0 = _context3[\"catch\"](1);\n            console.log(_context3.t0);\n\n          case 12:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[1, 9]], Promise);\n  }\n\n  function renderItem(_ref2) {\n    var item = _ref2.item;\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate(\"Details\", {\n          id: item.id\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: {\n        padding: 10,\n        paddingTop: 20,\n        paddingBottom: 20,\n        borderBottomColor: \"#ccc\",\n        borderBottomWidth: 1,\n        flexDirection: \"row\",\n        justifyContent: \"space-between\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: styles.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, item.title), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return deletePost(item.id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }, React.createElement(FontAwesome, {\n      name: \"trash\",\n      size: 20,\n      color: \"#a80000\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    data: posts,\n    renderItem: renderItem,\n    style: {\n      width: \"100%\"\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.id.toString();\n    },\n    refreshControl: React.createElement(RefreshControl, {\n      colors: [\"#9Bd35A\", \"#689F38\"],\n      refreshing: refreshing,\n      onRefresh: onRefresh,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/sukarno.zhanggmail.com/Desktop/PMOB6/screens/IndexScreen.js"],"names":["React","useEffect","useState","FontAwesome","axios","API","API_POSTS","lightStyles","useSelector","IndexScreen","navigation","route","posts","setPosts","refreshing","setRefreshing","styles","token","state","auth","setOptions","headerRight","addPost","color","headerTint","marginRight","getPosts","console","log","removeListener","addListener","get","headers","Authorization","response","data","error","navigate","onRefresh","deletePost","id","delete","filter","item","renderItem","padding","paddingTop","paddingBottom","borderBottomColor","borderBottomWidth","flexDirection","justifyContent","text","title","container","width","toString"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;AAEA,SAASC,WAAT,QAA4B,oBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,GAAT,EAAcC,SAAd;AACA,SAASC,WAAT;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,eAAe,SAASC,WAAT,OAA4C;AAAA;;AAAA,MAArBC,UAAqB,QAArBA,UAAqB;AAAA,MAATC,KAAS,QAATA,KAAS;;AAEzD,kBAA0BT,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOU,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAoCX,QAAQ,CAAC,KAAD,CAA5C;AAAA;AAAA,MAAOY,UAAP;AAAA,MAAmBC,aAAnB;;AACA,MAAMC,MAAM,GAAGT,WAAf;AACA,MAAMU,KAAK,GAAGT,WAAW,CAAC,UAACU,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAN,CAAWF,KAAtB;AAAA,GAAD,CAAzB;AAGAhB,EAAAA,SAAS,CAAC,YAAM;AACdS,IAAAA,UAAU,CAACU,UAAX,CAAsB;AACpBC,MAAAA,WAAW,EAAE;AAAA,eACX,oBAAC,gBAAD;AAAkB,UAAA,OAAO,EAAEC,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,WAAD;AAAa,UAAA,IAAI,EAAC,MAAlB;AAAyB,UAAA,IAAI,EAAE,EAA/B;AAAmC,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAEP,MAAM,CAACQ,UAAhB;AAA4BC,YAAAA,WAAW,EAAE;AAAzC,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADW;AAAA;AADO,KAAtB;AAOD,GARQ,CAAT;AAUAxB,EAAAA,SAAS,CAAC,YAAM;AACdyB,IAAAA,QAAQ;AACT,GAFQ,EAEN,EAFM,CAAT;AAIAzB,EAAAA,SAAS,CAAC,YAAM;AACd0B,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,QAAMC,cAAc,GAAGnB,UAAU,CAACoB,WAAX,CAAuB,OAAvB,EAA+B,YAAK;AACzDH,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAF,MAAAA,QAAQ;AACT,KAHsB,CAAvB;AAIAA,IAAAA,QAAQ;AACR,WAAOG,cAAP;AACD,GARQ,EAQP,EARO,CAAT;;AAUA,WAAeH,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAG2BtB,KAAK,CAAC2B,GAAN,CAAU1B,GAAG,GAAGC,SAAhB,EAA2B;AAChD0B,cAAAA,OAAO,EAAE;AAAEC,gBAAAA,aAAa,WAAShB;AAAxB;AADuC,aAA3B,CAH3B;;AAAA;AAGUiB,YAAAA,QAHV;AAMIP,YAAAA,OAAO,CAACC,GAAR,CAAYM,QAAQ,CAACC,IAArB;AACAR,YAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AACAJ,YAAAA,QAAQ,CAACqB,QAAQ,CAACC,IAAV,CAAR;AARJ,6CASW,WATX;;AAAA;AAAA;AAAA;AAWIR,YAAAA,OAAO,CAACC,GAAR,CAAY,YAAMM,QAAN,CAAeC,IAA3B;;AACA,gBAAI,YAAMD,QAAN,CAAeC,IAAf,CAAoBC,KAApB,GAA4B,eAAhC,EAAiD;AAC/C1B,cAAAA,UAAU,CAAC2B,QAAX,CAAoB,cAApB;AACD;;AAdL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAkBA,WAAeC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACEvB,YAAAA,aAAa,CAAC,IAAD,CAAb;AADF;AAAA,6CAEyBW,QAAQ,EAFjC;;AAAA;AAEQQ,YAAAA,QAFR;AAGEnB,YAAAA,aAAa,CAAC,KAAD,CAAb;;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMA,WAASO,OAAT,GAAmB;AACjBZ,IAAAA,UAAU,CAAC2B,QAAX,CAAoB,KAApB;AAED;;AAED,WAAeE,UAAf,CAA0BC,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAEEb,YAAAA,OAAO,CAACC,GAAR,CAAY,cAAcY,EAA1B;AAFF;AAAA;AAAA,6CAI2BpC,KAAK,CAACqC,MAAN,CAAapC,GAAG,GAAGC,SAAN,UAAsBkC,EAAtB,CAAb,EAAyC;AAC9DR,cAAAA,OAAO,EAAE;AAAEC,gBAAAA,aAAa,WAAShB;AAAxB;AADqD,aAAzC,CAJ3B;;AAAA;AAIUiB,YAAAA,QAJV;AAOIP,YAAAA,OAAO,CAACC,GAAR,CAAYM,QAAZ;AACArB,YAAAA,QAAQ,CAACD,KAAK,CAAC8B,MAAN,CAAa,UAACC,IAAD;AAAA,qBAAUA,IAAI,CAACH,EAAL,KAAYA,EAAtB;AAAA,aAAb,CAAD,CAAR;AARJ;AAAA;;AAAA;AAAA;AAAA;AAUIb,YAAAA,OAAO,CAACC,GAAR;;AAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgBA,WAASgB,UAAT,QAA8B;AAAA,QAARD,IAAQ,SAARA,IAAQ;AAC5B,WACE,oBAAC,gBAAD;AAAkB,MAAA,OAAO,EAAE;AAAA,eAAMjC,UAAU,CAAC2B,QAAX,CAAoB,SAApB,EAA+B;AAACG,UAAAA,EAAE,EAAEG,IAAI,CAACH;AAAV,SAA/B,CAAN;AAAA,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AACE,MAAA,KAAK,EAAE;AACLK,QAAAA,OAAO,EAAE,EADJ;AAELC,QAAAA,UAAU,EAAE,EAFP;AAGLC,QAAAA,aAAa,EAAE,EAHV;AAILC,QAAAA,iBAAiB,EAAE,MAJd;AAKLC,QAAAA,iBAAiB,EAAE,CALd;AAMLC,QAAAA,aAAa,EAAE,KANV;AAOLC,QAAAA,cAAc,EAAE;AAPX,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEnC,MAAM,CAACoC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BT,IAAI,CAACU,KAAhC,CAVF,EAWE,oBAAC,gBAAD;AAAkB,MAAA,OAAO,EAAE;AAAA,eAAMd,UAAU,CAACI,IAAI,CAACH,EAAN,CAAhB;AAAA,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAC,OAAlB;AAA0B,MAAA,IAAI,EAAE,EAAhC;AAAoC,MAAA,KAAK,EAAC,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAXF,CADF,CADF;AAmBD;;AAED,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAExB,MAAM,CAACsC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAE1C,KADR;AAEE,IAAA,UAAU,EAAEgC,UAFd;AAGE,IAAA,KAAK,EAAE;AAAEW,MAAAA,KAAK,EAAE;AAAT,KAHT;AAIE,IAAA,YAAY,EAAE,sBAACZ,IAAD;AAAA,aAAUA,IAAI,CAACH,EAAL,CAAQgB,QAAR,EAAV;AAAA,KAJhB;AAKE,IAAA,cAAc,EAAE,oBAAC,cAAD;AACd,MAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,CADM;AAEd,MAAA,UAAU,EAAE1C,UAFE;AAGd,MAAA,SAAS,EAAEwB,SAHG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAcD","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Text, View, TouchableOpacity, FlatList, RefreshControl} from \"react-native\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport axios from \"axios\";\n//import AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { API, API_POSTS } from \"../constants/API\";\nimport { lightStyles } from \"../styles/commonStyles\";\nimport { useSelector } from \"react-redux\";\n\nexport default function IndexScreen({ navigation, route }) {\n\n  const [posts, setPosts] = useState([]);\n  const [refreshing, setRefreshing] = useState(false);\n  const styles = lightStyles;\n  const token = useSelector((state) => state.auth.token);\n\n  // This is to set up the top right button\n  useEffect(() => {\n    navigation.setOptions({\n      headerRight: () => (\n        <TouchableOpacity onPress={addPost}>\n          <FontAwesome name=\"plus\" size={24} style={{ color: styles.headerTint, marginRight: 15 }} />\n        </TouchableOpacity>\n      ),\n    });\n  });\n\n  useEffect(() => {\n    getPosts();\n  }, []);\n\n  useEffect(() => {\n    console.log(\"Setting up listener\")\n    const removeListener = navigation.addListener(\"focus\",()=> {\n      console.log(\"Running nav listener\");\n      getPosts();\n    });\n    getPosts();\n    return removeListener;\n  },[]);\n\n  async function getPosts() {\n    //const token = await AsyncStorage.getItem(\"token\");\n    try {\n      const response = await axios.get(API + API_POSTS, {\n        headers: { Authorization: `JWT ${token}` },\n      })\n      console.log(response.data);\n      console.log(token)\n      setPosts(response.data);\n      return \"completed\"\n    } catch (error) {\n      console.log(error.response.data);\n      if (error.response.data.error = \"Invalid token\") {\n        navigation.navigate(\"SignInSignUp\");\n      }\n    }\n  }\n\n  async function onRefresh() {\n    setRefreshing(true);\n    const response = await getPosts()\n    setRefreshing(false);\n  }\n\n  function addPost() {\n    navigation.navigate(\"Add\")\n    \n  }\n\n  async function deletePost(id) {\n    //const token = await AsyncStorage.getItem(\"token\");\n    console.log(\"Deleting \" + id);\n    try {\n      const response = await axios.delete(API + API_POSTS + `/${id}`, {\n        headers: { Authorization: `JWT ${token}` },\n      })\n      console.log(response);\n      setPosts(posts.filter((item) => item.id !== id));\n    } catch (error) {\n      console.log(error)\n    }\n    \n  }\n\n  // The function to render each row in our FlatList\n  function renderItem({ item }) {\n    return (\n      <TouchableOpacity onPress={() => navigation.navigate(\"Details\", {id: item.id})}>\n        <View\n          style={{\n            padding: 10,\n            paddingTop: 20,\n            paddingBottom: 20,\n            borderBottomColor: \"#ccc\",\n            borderBottomWidth: 1,\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n          }}>\n          <Text style={styles.text}>{item.title}</Text>\n          <TouchableOpacity onPress={() => deletePost(item.id)}>\n            <FontAwesome name=\"trash\" size={20} color=\"#a80000\" />\n          </TouchableOpacity>\n        </View>\n      </TouchableOpacity>\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      <FlatList\n        data={posts}\n        renderItem={renderItem}\n        style={{ width: \"100%\" }}\n        keyExtractor={(item) => item.id.toString()}\n        refreshControl={<RefreshControl\n          colors={[\"#9Bd35A\", \"#689F38\"]}\n          refreshing={refreshing}\n          onRefresh={onRefresh}/>}\n      />\n    </View>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}